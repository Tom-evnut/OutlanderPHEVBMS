
C:\Users\tomde\AppData\Local\Temp\arduino\sketches\7C8AEEB66DC228D48A8A52C58CBD2DFB/OutlanderBMSV2.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00016208 l    d  .fini	00000000 .fini
0001620c l    d  .ARM.exidx	00000000 .ARM.exidx
1fff8000 l    d  .usbdescriptortable	00000000 .usbdescriptortable
1fff8200 l    d  .dmabuffers	00000000 .dmabuffers
1fff83bc l    d  .usbbuffers	00000000 .usbbuffers
1fff8720 l    d  .data	00000000 .data
1fff8f90 l    d  .bss	00000000 .bss
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 mk20dx128.c
0000a5f0 l     F .text	0000000c startup_default_early_hook
0000a5fc l     F .text	00000002 startup_default_late_hook
00000000 l    df *ABS*	00000000 crtstuff.c
00000410 l     F .text	00000000 register_tm_clones
00000434 l     F .text	00000000 frame_dummy
1fff8f90 l     O .bss	00000000 object.0
000161f8 l     O .text	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 BMSModule.cpp
00000000 l    df *ABS*	00000000 BMSModuleManager.cpp
00000000 l    df *ABS*	00000000 Logger.cpp
00000000 l    df *ABS*	00000000 OutlanderBMSV2.ino.cpp
00001b64 l     F .text	00000054 long map<unsigned short, int, int, int, int>(unsigned short, int, int, int, int, std::enable_if<std::is_integral<unsigned short>::value, void>::type*) [clone .isra.0]
00001c10 l     F .text	00000024 Print::println(char const*) [clone .isra.0]
00007f7c l     F .text	00000094 _GLOBAL__sub_I_can
00008244 l       .text	00000000 L_31342_delayMicroseconds
00000000 l    df *ABS*	00000000 SerialConsole.cpp
00000000 l    df *ABS*	00000000 FlexCAN.cpp
00008f78 l     F .text	0000000c _GLOBAL__sub_I_Can0
00000000 l    df *ABS*	00000000 ADC.cpp
00000000 l    df *ABS*	00000000 ADC_Module.cpp
00000000 l    df *ABS*	00000000 SPI.cpp
000096f0 l     F .text	00000038 _GLOBAL__sub_I__Z15_spi_dma_rxISR0v
00000000 l    df *ABS*	00000000 FilterOnePole.cpp
00000000 l    df *ABS*	00000000 movingAvg.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial2.cpp
00000000 l    df *ABS*	00000000 HardwareSerial3.cpp
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
00009c60 l     F .text	00000002 dummy_funct()
1fff87dc l     O .data	00000010 funct_table
00000000 l    df *ABS*	00000000 Print.cpp
00009da4 l     F .text	00000082 Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 analog.c
1fffc3b4 l     O .bss	00000001 analog_reference_internal
1fffc3b5 l     O .bss	00000001 calibrating
1fff87ec l     O .data	00000001 analog_config_bits
1fff87ed l     O .data	00000001 analog_num_average
00000000 l    df *ABS*	00000000 eeprom.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pins_teensy.c
0000a6fc l     F .text	00000044 digitalWrite.part.0
0000a764 l     F .text	00000002 startup_default_middle_hook
1fff87f4 l     O .data	00000001 analog_write_res
00000000 l    df *ABS*	00000000 serial2.c
1fffc3bc l     O .bss	00000004 rts_pin
1fffc3c0 l     O .bss	00000040 rx_buffer
1fffc400 l     O .bss	00000001 rx_buffer_head
1fffc404 l     O .bss	00000004 rx_buffer_storage_
1fffc408 l     O .bss	00000001 rx_buffer_tail
1fffc40c l     O .bss	00000004 transmit_pin
1fffc410 l     O .bss	00000001 transmitting
1fffc414 l     O .bss	00000028 tx_buffer
1fffc43c l     O .bss	00000001 tx_buffer_head
1fffc440 l     O .bss	00000004 tx_buffer_storage_
1fffc444 l     O .bss	00000001 tx_buffer_tail
1fff87f8 l     O .data	00000004 rts_high_watermark_
1fff87fc l     O .data	00000004 rts_low_watermark_
1fff8800 l     O .data	00000004 rx_buffer_total_size_
1fff8804 l     O .data	00000001 rx_pin_num
1fff8808 l     O .data	00000004 tx_buffer_total_size_
1fff880c l     O .data	00000001 tx_pin_num
00000000 l    df *ABS*	00000000 serial3.c
0000b60c l     F .text	000000ec serial3_putchar.part.0
1fffc448 l     O .bss	00000004 rts_pin
1fffc44c l     O .bss	00000040 rx_buffer
1fffc48c l     O .bss	00000001 rx_buffer_head
1fffc490 l     O .bss	00000004 rx_buffer_storage_
1fffc494 l     O .bss	00000001 rx_buffer_tail
1fffc498 l     O .bss	00000004 transmit_pin
1fffc49c l     O .bss	00000001 transmitting
1fffc4a0 l     O .bss	00000028 tx_buffer
1fffc4c8 l     O .bss	00000001 tx_buffer_head
1fffc4cc l     O .bss	00000004 tx_buffer_storage_
1fffc4d0 l     O .bss	00000001 tx_buffer_tail
1fff8810 l     O .data	00000004 rts_high_watermark_
1fff8814 l     O .data	00000004 rts_low_watermark_
1fff8818 l     O .data	00000004 rx_buffer_total_size_
1fff881c l     O .data	00000004 tx_buffer_total_size_
1fff8820 l     O .data	00000001 tx_pin_num
00000000 l    df *ABS*	00000000 serialEvent2.cpp
00000000 l    df *ABS*	00000000 serialEvent3.cpp
00000000 l    df *ABS*	00000000 usb_dev.c
1fffc4d4 l     O .bss	00000040 ep0_rx0_buf
1fffc514 l     O .bss	00000040 ep0_rx1_buf
1fffc554 l     O .bss	00000001 ep0_tx_bdt_bank
1fffc555 l     O .bss	00000001 ep0_tx_data_toggle
1fffc556 l     O .bss	00000002 ep0_tx_len
1fffc558 l     O .bss	00000004 ep0_tx_ptr
1fffc55c l     O .bss	00000008 reply_buffer
1fffc564 l     O .bss	00000010 rx_first
1fffc574 l     O .bss	00000010 rx_last
1fffc584 l     O .bss	00000008 setup
1fffc58c l     O .bss	00000010 tx_first
1fffc59c l     O .bss	00000010 tx_last
1fffc5ac l     O .bss	00000004 tx_state
1fff8000 l     O .usbdescriptortable	000000a0 table
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_mem.c
1fff8834 l     O .data	00000004 usb_buffer_available
00000000 l    df *ABS*	00000000 usb_serial.c
1fffc5c0 l     O .bss	00000004 rx_packet
1fffc5c4 l     O .bss	00000001 transmit_previous_timeout
1fffc5c5 l     O .bss	00000001 tx_noautoflush
1fffc5c8 l     O .bss	00000004 tx_packet
00000000 l    df *ABS*	00000000 yield.cpp
1fffc5dd l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
1fff883c l     O .data	00000043 config_descriptor
1fff8880 l     O .data	00000012 device_descriptor
00000000 l    df *ABS*	00000000 libm_a-wf_exp.o
00000000 l    df *ABS*	00000000 libm_a-sf_finite.o
00000000 l    df *ABS*	00000000 libm_a-ef_exp.o
00000000 l    df *ABS*	00000000 libm_a-math_errf.o
0000ce4c l     F .text	00000012 with_errnof
0000ce60 l     F .text	00000026 xflowf
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_cmpsf2.o
00000000 l    df *ABS*	00000000 _arm_fixsfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000e338 l     F .text	00000018 stdio_exit_handler
0000e350 l     F .text	00000040 cleanup_stdio
0000e390 l     F .text	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
0000eaa4 l     F .text	00000014 register_fini
00000000 l    df *ABS*	00000000 libc_a-atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fini.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
000114f8 l     F .text	00000128 quorem
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00012668 l     F .text	00000076 __sprint_r.part.0
00013664 l     F .text	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00008fe0 g     F .text	00000004 ADC_Module::getMaxValue()
1fff8fc0 g     O .bss	00000004 Charged
00006664 g     F .text	000000ac outputdebug()
0000a5e8  w    F .text	00000006 adc0_isr
00001c34 g     F .text	00000170 loadSettings()
0000d32c g     F .text	0000002c .hidden __aeabi_dcmpun
0000c784 g     F .text	0000002c usb_serial_available
000040f0 g     F .text	0000201c menu()
00013e7c g     F .text	00000024 _isatty_r
0000d2f0 g     F .text	00000012 .hidden __aeabi_dcmple
00009840 g     F .text	00000056 movingAvg::reading(int)
00001b1c  w    F .text	0000000c IntervalTimer::~IntervalTimer()
0000d22c g     F .text	0000007a .hidden __cmpdf2
0000a69c g     F .text	00000004 operator new[](unsigned int)
0000e7fc g     F .text	0000002c _lseek_r
0000c9f4  w    F .text	000000f0 yield
00009b28  w    F .text	0000000c HardwareSerial3::write(unsigned char)
0000d22c g     F .text	0000007a .hidden __eqdf2
1fff8898 g     O .data	00000018 usb_string_manufacturer_name_default
1fffc078 g     O .bss	00000014 myRAMin
0000d1c0 g     F .text	0000005a .hidden __floatdidf
0000a5a4  w    F .text	00000044 hard_fault_isr
00009af0 g     F .text	0000002c HardwareSerial3::begin(unsigned long)
0000a5e8  w    F .text	00000006 dma_ch6_isr
000004dc g     F .text	00000006 BMSModule::getCUVCells()
1fffc764 g     O .bss	00000001 __lock___atexit_recursive_mutex
000095a4  w    F .text	0000013c SPIClass::dma_rxisr()
000124d8 g     F .text	0000004c _wcrtomb_r
1fffc064 g     O .bss	00000014 myRA
000033a4 g     F .text	00000184 calcur()
0000b9b0 g     F .text	00000014 serial3_putchar
00009e38 g     F .text	0000001c Print::println()
00000ccc g     F .text	0000002c BMSModuleManager::seriescells()
0000b2e8 g     F .text	00000028 serial2_available
0000e5a4 g     F .text	00000020 __sseek
0000e464 g     F .text	0000003c __sinit
0000a5e8  w    F .text	00000006 uart0_lon_isr
0000bd50 g     F .text	00000080 usb_rx_memory
00013da0 g     F .text	000000b0 __swbuf_r
00009a20  w    F .text	00000008 HardwareSerial2::setTX(unsigned char, bool)
1fffbeb4 g     O .bss	00000004 conttimer1
0000a5e8  w    F .text	00000006 dma_ch8_isr
00008b98 g     F .text	000000e6 FlexCAN::write(CAN_message_t const&)
00009488 g     F .text	00000072 ADC_Module::setAveraging(unsigned char)
0000df48 g     F .text	0000000c __malloc_unlock
00009be0  w    F .text	00000020 HardwareSerial3::write(int)
00008ab8 g     F .text	000000e0 FlexCAN::writeTxRegisters(CAN_message_t const&, unsigned char)
0000ae34 g     F .text	000000d0 serial2_end
0000a100 g     F .text	000000c8 analog_init
000030cc g     F .text	000000e4 Prechargecon()
0000bdd0 g     F .text	00000088 usb_tx
0000d71c g     F .text	00000136 .hidden __divsf3
1fffc0a8 g     O .bss	00000004 outputcheck
0000a5e8  w    F .text	00000006 portcd_isr
000093ac g     F .text	00000034 ADC_Module::ADC_Module(unsigned char, unsigned char const*, ADC_Module::ADC_NLIST const*, ADC_settings::ADC_REGS_t&)
0000a204 g     F .text	0000006c eeprom_initialize
1fffc1b4 g     O .bss	00000004 x
00009b6c  w    F .text	00000004 HardwareSerial3::clear()
0000e5cc g     F .text	000000f8 memmove
1fffbf00 g     O .bss	00000004 lasttime
000019f4 g     F .text	0000001c Logger::console(char*, ...)
00000a40 g     F .text	00000088 BMSModule::getAvgTemp()
0000ed9c g     F .text	0000004c _Balloc
1fffbf30 g     O .bss	00000004 menuload
0000a5e8  w    F .text	00000006 can1_rx_warn_isr
00016214 g       .ARM.exidx	00000000 __exidx_end
00000458 g     F .text	0000006c BMSModule::BMSModule()
0000d940 g     F .text	0000004c .hidden __fixsfsi
0000a5e8  w    F .text	00000006 dma_error_isr
1fffc198 g     O .bss	00000001 showbal
1fffc3ac g     O .bss	00000001 EventResponder::runningFromYield
0000a5e8  w    F .text	00000006 i2c0_isr
1fffc1c0 g     O .bss	00000004 whichDisplay
0000d21c g     F .text	0000008a .hidden __gtdf2
1fff8f8c g     O .data	00000004 __atexit_recursive_mutex
000093ac g     F .text	00000034 ADC_Module::ADC_Module(unsigned char, unsigned char const*, ADC_Module::ADC_NLIST const*, ADC_settings::ADC_REGS_t&)
0000e8a4 g     F .text	0000000c __errno
00009b34  w    F .text	00000018 HardwareSerial3::write(char const*)
1fff8ff4 g     O .bss	00000004 SecCount
0000a5e8  w    F .text	00000006 portd_isr
0000a5e8  w    F .text	00000006 enet_error_isr
1fffc3a8 g     O .bss	00000004 EventResponder::firstInterrupt
00000ba0 g     F .text	000000b4 BMSModuleManager::BMSModuleManager()
1fffbf08 g     O .bss	00000004 looptime1
00009a38  w    F .text	00000004 HardwareSerial2::end()
1fffc75c g     O .bss	00000004 __stdio_exit_handler
00009a28  w    F .text	00000006 HardwareSerial2::setRX(unsigned char)
0000a5e8  w    F .text	00000006 tpm1_isr
0000c66c  w    F .text	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
1fffbe3c g     O .bss	00000002 chargecurrent
00013e50 g     F .text	0000002c _fstat_r
00015c68 g     O .text	00000110 digital_pin_to_info_PGM
000004c4 g     F .text	00000006 BMSModule::getFaults()
1fffc760 g     O .bss	00000004 errno
1fffc0b8 g     O .bss	000000e0 settings
00016214 g       .ARM.exidx	00000000 _etext
000096e0 g     F .text	00000010 _spi_dma_rxISR0()
1fff8f90 g       .bss	00000000 _sbss
0000d2b8 g     F .text	00000010 .hidden __aeabi_cdcmple
1fffbe44 g     O .bss	00000004 chargerendbulk
1fffc1a8 g     O .bss	00000004 voltage1
0000d3a4 g     F .text	00000160 .hidden __aeabi_fadd
0000d3a0 g     F .text	00000164 .hidden __subsf3
0000ab50 g     F .text	0000001c digitalRead
0000a5e8  w    F .text	00000006 porte_isr
1fff8730 g     O .data	00000008 bmsmanu
0000725c g     F .text	00000d20 loop
0000a5e8  w    F .text	00000006 portb_isr
00008528 g     F .text	00000078 FlexCAN::FlexCAN(unsigned char)
0000a5e8  w    F .text	00000006 spi1_isr
00000b64 g     F .text	00000030 BMSModule::setIgnoreCell(float)
0000a5e8  w    F .text	00000006 uart3_status_isr
0000a5e8  w    F .text	00000006 mcm_isr
00001808 g     F .text	00000044 BMSModuleManager::getBalancing()
00009a70  w    F .text	00000020 HardwareSerial2::write(int)
00009bdc  w    F .text	00000004 HardwareSerial3::availableForWrite()
1fffc3a4 g     O .bss	00000004 EventResponder::lastInterrupt
0000b430 g     F .text	00000184 uart1_status_isr
0000af3c g     F .text	0000007c serial2_set_tx
0000a3fc g     F .text	000001a6 memcpy
0000a5e8  w    F .text	00000006 randnum_isr
0000b3e8 g     F .text	00000048 serial2_clear
0000d2a8 g     F .text	00000020 .hidden __aeabi_cdrcmple
1fff8f90 g     O .data	00000000 .hidden __TMC_END__
0000d92c g     F .text	00000012 .hidden __aeabi_fcmpgt
0000110c g     F .text	00000004 BMSModuleManager::getPackVoltage()
0000f514 g     F .text	00001ba4 _svfprintf_r
0000d148 g     F .text	00000022 .hidden __floatsidf
00001110 g     F .text	00000004 BMSModuleManager::setPstrings(int)
1fff8768 g     O .data	00000002 pwmfreq
1fffc3b8 g     O .bss	00000004 systick_millis_count
0000d224 g     F .text	00000082 .hidden __ltdf2
0000a5a4  w    F .text	00000044 bus_fault_isr
00006a68 g     F .text	00000520 chargercomms()
00009b90  w    F .text	00000008 HardwareSerial3::setTX(unsigned char, bool)
0000a5e8  w    F .text	00000006 watchdog_isr
0000a654 g     F .text	00000044 nvic_execution_priority
0000a5e8  w    F .text	00000006 i2c1_isr
1fffc5b0 g     O .bss	00000001 usb_configuration
1fff900c g     O .bss	00002e24 bms
00008520 g     F .text	00000004 CANListener::frameHandler(CAN_message_t&, int, unsigned char)
0000a5e8  w    F .text	00000006 dma_ch11_isr
000099ac  w    F .text	0000000c HardwareSerial2::write9bit(unsigned long)
00009ad0  w    F .text	00000020 HardwareSerial2::write(unsigned int)
0000bcd8  w    F .text	00000002 serialEvent2()
1fff8744 g     O .data	00000004 chargerid2
0000a5e8  w    F .text	00000006 i2c2_isr
0000a80c g     F .text	00000224 analogWrite
1fff8898  w    O .data	00000018 usb_string_manufacturer_name
1fffc5b4 g     O .bss	00000008 usb_rx_byte_count_data
00009d5c g     F .text	00000018 pit1_isr
0000d9cc g     F .text	00000010 malloc
0000a5e8  w    F .text	00000006 dma_ch4_isr
0000a5e8  w    F .text	00000006 software_isr
0000af04 g     F .text	00000038 serial2_set_transmit_pin
000097bc g     F .text	00000068 FilterOnePole::input(float)
0000a638  w    F .text	0000000a _fstat
0000a5e8  w    F .text	00000006 dma_ch7_isr
00001da4 g     F .text	00000118 alarmupdate()
00009728 g     F .text	0000003c FilterOnePole::FilterOnePole(FILTER_TYPE, float, float)
00011440 g     F .text	00000040 __assert_func
0000958c  w    F .text	00000016 EventResponder::triggerEvent(int, void*)
0000d50c g     F .text	0000001c .hidden __aeabi_i2f
00015ff0 g     O .text	000000c8 __mprec_tens
0000c5cc g     F .text	00000088 usb_init
0000066c g     F .text	00000088 BMSModule::getHighTemp()
0000d85c g     F .text	00000066 .hidden __lesf2
0000618c g     F .text	00000098 CAB500()
0000b82c g     F .text	0000006c serial3_end
0000d358 g     F .text	00000040 .hidden __fixunsdfsi
0000a5e8  w    F .text	00000006 lptmr_isr
00001294 g     F .text	00000054 BMSModuleManager::getAvgCellVolt()
1fffc620 g     O .bss	00000004 __malloc_top_pad
0000a750 g     F .text	00000014 rtc_set
1fffc1c4 g     O .bss	0000019c Can0
00009ba0  w    F .text	00000006 HardwareSerial3::transmitterEnable(unsigned char)
1fff8f90 g       .bss	00000000 __bss_start__
00009214 g     F .text	00000090 ADC_Module::setResolution(unsigned char)
1fffbfc4 g     O .bss	000000a0 msgbuf
1fff8720 g     O .data	00000000 .hidden __dso_handle
0000d128 g     F .text	0000001e .hidden __aeabi_ui2d
000015cc g     F .text	0000023c BMSModuleManager::printAllCSV(unsigned long, float, int)
000112f4 g     F .text	00000008 _localeconv_r
0000ad98 g     F .text	0000009c serial2_format
0000a740 g     F .text	00000010 attachInterruptVector
000136e4 g     F .text	000002e8 __sfvwrite_r
0000ef3c g     F .text	0000005c __i2b
00015b7c g     O .text	00000068 vtable for HardwareSerial2
0000ba5c g     F .text	0000008c serial3_getchar
1fff8720 g       .data	00000000 _sdata
0000cea4 g     F .text	00000000 .hidden __aeabi_drsub
0000cbf8 g     F .text	00000010 finitef
0000e854 g     F .text	00000024 _sbrk_r
000004e4 g     F .text	0000000c BMSModule::getCellVoltage(int)
00009b80  w    F .text	00000010 HardwareSerial3::attachRts(unsigned char)
000001bc g     F .text	000001c8 ResetHandler
0000b5ec g     F .text	00000020 serial2_add_memory_for_write
1fffc19c g     O .bss	00000004 storagemode
0000c70c g     F .text	00000048 usb_serial_getchar
0000a5e8  w    F .text	00000006 can1_bus_off_isr
00006224 g     F .text	00000374 currentlimit()
000087a0 g     F .text	00000062 FlexCAN::setMask(unsigned long, unsigned char)
0000a5e8  w    F .text	00000006 ftm2_isr
1fffc5cc g     O .bss	00000008 usb_cdc_line_coding
0000ab04 g     F .text	0000004c digitalWrite
0000a5e8  w    F .text	00000006 uart5_status_isr
0000a5e8  w    F .text	00000006 lpuart0_status_isr
1fffc3b0 g     O .bss	00000004 EventResponder::lastYield
00015aa8 g     O .text	0000002c ADC::channel2sc1aADC0
000005e4 g     F .text	00000088 BMSModule::getLowTemp()
0000e828 g     F .text	0000002c _read_r
00015df4 g     O .text	00000004 usb_endpoint_config_table
0000a5e8  w    F .text	00000006 dma_ch9_isr
1fffbf34 g     O .bss	00000010 msg
00009d74 g     F .text	00000018 pit2_isr
0000acbc g     F .text	000000dc serial2_begin
0000d2dc g     F .text	00000012 .hidden __aeabi_dcmplt
0000ba34 g     F .text	00000028 serial3_available
000110b8 g     F .text	000000c6 _fclose_r
1fffc618 g     O .bss	00000004 __malloc_max_sbrked_mem
000099fc  w    F .text	00000004 HardwareSerial2::clear()
0000ab6c g     F .text	00000078 pinMode
1fffbefc g     O .bss	00000004 lastUpdate
0000c6bc g     F .text	00000050 usb_free
00009e80 g     F .text	000001c0 Print::printFloat(double, unsigned char)
0000a5e8  w    F .text	00000006 i2c3_isr
0000d16c g     F .text	00000042 .hidden __extendsfdf2
1fffbf44 g     O .bss	00000080 msgString
000140f4 g     F .text	000001d0 .hidden __aeabi_ddiv
1fffbf0c g     O .bss	00000020 lowpassFilter
1fff8748 g     O .data	00000004 debug
0000ceb0 g     F .text	00000276 .hidden __adddf3
0000d864 g     F .text	0000005e .hidden __nesf2
0000b098 g     F .text	000000f8 serial2_putchar
00000e38 g     F .text	000002d4 BMSModuleManager::getAllVoltTemp()
00009a64  w    F .text	00000004 HardwareSerial2::available()
0000b310 g     F .text	0000008c serial2_getchar
0001620c g       .ARM.exidx	00000000 __exidx_start
00013ea0 g     F .text	00000254 .hidden __aeabi_dmul
00009d44 g     F .text	00000018 pit0_isr
00009b4c  w    F .text	00000010 HardwareSerial3::write(unsigned char const*, unsigned int)
0000a644  w    F .text	00000004 _isatty
1fffc3a0 g     O .bss	00000004 EventResponder::firstYield
000092a4 g     F .text	00000108 ADC_Module::analog_init()
1fff8724 g     O .data	00000001 Logger::logLevel
1fffbee0 g     O .bss	00000010 inMsg
00009c00  w    F .text	00000020 HardwareSerial3::write(unsigned long)
0000a5e8  w    F .text	00000006 can1_error_isr
0000df54 g     F .text	000003d8 _realloc_r
00000b4c g     F .text	00000006 BMSModule::settempsensor(int)
0000e8b0 g     F .text	00000048 __libc_init_array
1fffc904 g       .bss	00000000 __bss_end
00008f74 g     F .text	00000002 can0_wakeup_isr
1fffbe40 g     O .bss	00000004 chargerend
000099c4  w    F .text	00000018 HardwareSerial2::write(char const*)
0000a5e8  w    F .text	00000006 flash_cmd_isr
000099dc  w    F .text	00000010 HardwareSerial2::write(unsigned char const*, unsigned int)
0000b6f8 g     F .text	00000098 serial3_begin
00013b44 g     F .text	00000066 _fputwc_r
00015fc8 g     O .text	00000028 __mprec_bigtens
0000a650  w    F .text	00000002 abort
0000c654  w    F .text	00000004 usb_serial_class::clear()
0000d128 g     F .text	0000001e .hidden __floatunsidf
0000bb58 g     F .text	00000128 uart2_status_isr
0000a600  w    F .text	0000002c _sbrk
0000f2a4 g     F .text	0000003e __mcmp
00000b44 g     F .text	00000006 BMSModule::isReset()
1fff87f0 g     O .data	00000004 __brkval
1fffc5d4 g     O .bss	00000001 usb_cdc_line_rtsdtr
0000c9ac g     F .text	00000048 usb_serial_flush_callback
00006710 g     F .text	00000358 dashupdate()
1fffbeb8 g     O .bss	00000004 conttimer2
00009a3c  w    F .text	00000020 HardwareSerial2::begin(unsigned long, unsigned long)
000161e8 g     F .text	00000000 _init
1fff9000 g     O .bss	00000004 alarm
0000cc08 g     F .text	00000244 __ieee754_expf
1fffbe30 g     O .bss	00000001 bmsstatus
0000b9c4 g     F .text	00000028 serial3_write
00009b5c  w    F .text	00000008 HardwareSerial3::addMemoryForWrite(void*, unsigned int)
0000a5e8  w    F .text	00000006 svcall_isr
0000a2a4 g     F .text	0000004c eeprom_write_byte
0000a5e8  w    F .text	00000006 dma_ch15_isr
00001acc g     F .text	00000028 Logger::info(char*, ...)
00001280 g     F .text	00000004 BMSModuleManager::getHighTemperature()
0000d3a0 g     F .text	00000164 .hidden __aeabi_fsub
0000184c g     F .text	0000000c Logger::setLoglevel(Logger::LogLevel)
0000a5e8  w    F .text	00000006 uart1_error_isr
000112fc g     F .text	00000028 __libc_fini_array
0000aa30 g     F .text	000000d4 analogWriteFrequency
0000a5e8  w    F .text	00000006 usbhs_phy_isr
1fffbf2c g     O .bss	00000004 mainconttimer
1fffc904 g       .bss	00000000 _ebss
1fff87c8 g     O .data	00000014 Serial3
000086d0 g     F .text	00000084 FlexCAN::setFilter(CAN_filter_t const&, unsigned char)
1fff8754 g     O .data	00000004 firmver
00009ba8  w    F .text	00000004 HardwareSerial3::end()
1fffbe4c g     O .bss	00000060 console
0000ee9c g     F .text	00000040 __hi0bits
00008f84 g     F .text	0000005c ADC::ADC()
0000d918 g     F .text	00000012 .hidden __aeabi_fcmpge
000142c4 g     F .text	0000004e .hidden __fixdfsi
000099f4  w    F .text	00000008 HardwareSerial2::addMemoryForRead(void*, unsigned int)
0000a5e8 g     F .text	00000006 unused_isr
00009b70  w    F .text	00000010 HardwareSerial3::attachCts(unsigned char)
0000a5e8  w    F .text	00000006 spi0_isr
0000bc80 g     F .text	00000038 serial3_add_memory_for_read
1fffc768 g     O .bss	00000001 __lock___malloc_recursive_mutex
00009bd0  w    F .text	00000004 HardwareSerial3::read()
0000d538 g     F .text	0000007c .hidden __floatdisf
0000a5e8  w    F .text	00000006 dma_ch3_isr
00000b94 g     F .text	0000000a BMSModule::setTempconv(float, int)
1fffbeac g     O .bss	00000004 contctrl
1fffc624 g     O .bss	00000138 __sf
00007004 g     F .text	00000258 canread()
0000d854 g     F .text	0000006e .hidden __gtsf2
0000a5e8  w    F .text	00000006 flash_error_isr
0000ceb0 g     F .text	00000276 .hidden __aeabi_dadd
0000d224 g     F .text	00000082 .hidden __ledf2
000012e8 g     F .text	000002e4 BMSModuleManager::printPackDetails(int, bool)
0000d904 g     F .text	00000012 .hidden __aeabi_fcmple
0000a5e8  w    F .text	00000006 uart5_error_isr
0000a5e8  w    F .text	00000006 rtc_seconds_isr
00015b00 g     O .text	00000078 SPIClass::spi0_hardware
0000a5e8  w    F .text	00000006 pdb_isr
0000f0f4 g     F .text	000000c0 __pow5mult
0000d1b0 g     F .text	0000006a .hidden __aeabi_ul2d
0000a5a4  w    F .text	00000044 usage_fault_isr
0000a5e8  w    F .text	00000006 dac1_isr
00000000 g     O .text	000001bc _VectorsFlash
00001114 g     F .text	00000072 BMSModuleManager::setSensors(int, float, float, int)
0000a5e8  w    F .text	00000006 dma_ch14_isr
1fffbf04 g     O .bss	00000004 looptime
1fffbef8 g     O .bss	00000004 inputcheck
1fffc5d8 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000cae4 g     F .text	00000050 HardwareSerial::addToSerialEventsList()
1fff8fb0 g     O .bss	00000004 AverageCurrentMin
00009970 g     F .text	00000010 systick_isr
0000b9ec g     F .text	00000018 serial3_flush
0000a5e8  w    F .text	00000006 rtc_alarm_isr
0000e904 g     F .text	00000002 __retarget_lock_release_recursive
1fff8fe8 g     O .bss	00000004 SOCreset
00009a10  w    F .text	00000010 HardwareSerial2::attachRts(unsigned char)
0000a5e8  w    F .text	00000006 dma_ch2_isr
1fff8824 g     O .data	00000010 Serial
1fff8750 g     O .data	00000004 filterFrequency
0000a5e8  w    F .text	00000006 ftm1_isr
0000ce88 g     F .text	00000008 .hidden __math_uflowf
0000c674  w    F .text	00000006 usb_serial_class::write(unsigned char)
0000b898 g     F .text	00000038 serial3_set_transmit_pin
0000a5f0  w    F .text	0000000c startup_early_hook
0000a5e8  w    F .text	00000006 dma_ch13_isr
1fff8fa8 g     O .bss	00000004 Logger::lastLogTime
00009a68  w    F .text	00000004 HardwareSerial2::flush()
1fff8fb8 g     O .bss	00000004 CANmilliamps
0000a5e8  w    F .text	00000006 uart2_error_isr
0000c754 g     F .text	00000030 usb_serial_peekchar
0000d318 g     F .text	00000012 .hidden __aeabi_dcmpgt
1fff8758 g     O .data	00000004 maxac1
0000bcb8 g     F .text	00000020 serial3_add_memory_for_write
0000e4a0 g     F .text	0000000c __sfp_lock_acquire
00011330 g     F .text	00000000 memchr
0000b928 g     F .text	00000002 serial3_set_rx
1fffc904 g       .bss	00000000 __bss_end__
1fff88c8 g     O .data	00000016 usb_string_serial_number_default
0000a5a4 g     F .text	00000044 fault_isr
0000eb64 g     F .text	0000020c _free_r
0000e7cc g     F .text	0000000c __locale_mb_cur_max
00012524 g     F .text	0000001a _wcsrtombs_r
0000d304 g     F .text	00000012 .hidden __aeabi_dcmpge
0000a5e8  w    F .text	00000006 usb_charge_isr
1fffc770 g     O .bss	00000190 __atexit0
0000c664  w    F .text	00000004 usb_serial_class::flush()
1fff8fdc g     O .bss	00000004 Pretimer1
0000a5e8  w    F .text	00000006 cmt_isr
0000ceac g     F .text	0000027a .hidden __aeabi_dsub
0000a5e8  w    F .text	00000006 usbhs_isr
00009728 g     F .text	0000003c FilterOnePole::FilterOnePole(FILTER_TYPE, float, float)
1fff8ce8 g     O .data	00000004 __malloc_sbrk_base
0000c65c  w    F .text	00000004 usb_serial_class::read()
0000a5e8  w    F .text	00000006 ftm3_isr
1fff8fcc g     O .bss	00000004 Discharge
00006598 g     F .text	000000cc inputdebug()
0000a5e8  w    F .text	00000006 tsi0_isr
0000d1b0 g     F .text	0000006a .hidden __floatundidf
0000a648  w    F .text	00000006 _lseek
0000f1b4 g     F .text	000000f0 __lshift
0000a5e8  w    F .text	00000006 spi2_isr
1fff8738 g     O .data	00000008 bmsname
0000d50c g     F .text	0000001c .hidden __floatsisf
00012568 g     F .text	00000100 __ssprint_r
0000cb34  w    F .text	00000002 serialEvent()
1fffc5b1 g     O .bss	00000001 usb_reboot_timer
0000ea1c g     F .text	00000088 __register_exitproc
0000a270 g     F .text	00000034 eeprom_read_byte
1fffc1ac g     O .bss	00000004 voltage2
0000c7b0 g     F .text	00000038 usb_serial_flush_input
1fffbed4 g     O .bss	00000008 filter
0000ef98 g     F .text	0000015c __multiply
0000c8f0 g     F .text	0000001a usb_serial_putchar
00000021 g       *ABS*	00000000 _teensy_model_identifier
1fff8ffc g     O .bss	00000004 adc
0000d940 g     F .text	0000004c .hidden __aeabi_f2iz
0000e768 g     F .text	00000064 strncpy
1fffc5f0 g     O .bss	00000028 __malloc_current_mallinfo
1fff8fe0 g     O .bss	00000004 RawCur
0000d864 g     F .text	0000005e .hidden __eqsf2
0000f438 g     F .text	000000c0 __d2b
1fffc5e0 g     O .bss	0000000c HardwareSerial::s_serials_with_serial_events
00008f5c g     F .text	00000002 can0_bus_off_isr
00009c64 g     F .text	00000094 IntervalTimer::beginCycles(void (*)(), unsigned long)
0000b190 g     F .text	00000110 serial2_write
000004cc g     F .text	00000006 BMSModule::getAlerts()
000099b8  w    F .text	0000000c HardwareSerial2::write(unsigned char)
00009a90  w    F .text	00000020 HardwareSerial2::write(unsigned long)
00000c90 g     F .text	0000003c BMSModuleManager::checkcomms()
0000b2b8 g     F .text	00000030 serial2_write_buffer_free
1fffc5bc g     O .bss	00000001 usb_rx_memory_needed
0000be58 g     F .text	00000774 usb_isr
0000e32c g     F .text	0000000c __cxa_atexit
1fff876c g     O .data	00000004 sendbufsize
1fff8fd8 g     O .bss	00000004 Pretimer
0000d71c g     F .text	00000136 .hidden __aeabi_fdiv
0000e7d8 g     F .text	00000024 _close_r
0000d148 g     F .text	00000022 .hidden __aeabi_i2d
0000a0f8 g     F .text	00000006 Stream::parseInt()
00001af4 g     F .text	00000028 Logger::error(char*, ...)
000031b0 g     F .text	000001f4 contcon()
1fffc368 g     O .bss	00000038 SPI
00008528 g     F .text	00000078 FlexCAN::FlexCAN(unsigned char)
1fff8822 g     O .data	00000001 _serialEvent3_default
00015d78  w    O .text	00000028 vtable for usb_serial_class
0000a5e8  w    F .text	00000006 uart3_error_isr
00003528 g     F .text	00000bc8 VEcan()
0000e8fc g     F .text	00000002 __retarget_lock_close_recursive
00015aa4 g     O .text	00000004 ADC::diff_table_ADC1
1fffc0b0 g     O .bss	00000004 overtriptimer
0000d528 g     F .text	0000008c .hidden __floatundisf
0000a040 g     F .text	00000040 Stream::timedPeek()
000004d4 g     F .text	00000006 BMSModule::getCOVCells()
000139cc g     F .text	000000cc __swsetup_r
0000a5e8  w    F .text	00000006 porta_isr
1fffbef4 g     O .bss	00000004 incomingByte
000140f4 g     F .text	000001d0 .hidden __divdf3
1fffbec0 g     O .bss	00000004 curloop1
1fffbec8 g     O .bss	00000004 debugAvgCur
1fff83bc g     O .usbbuffers	00000360 usb_buffer_memory
00001bb8 g     F .text	00000058 low_voltage_isr
1fff88e0 g     O .data	00000408 __malloc_av_
0000d504 g     F .text	00000024 .hidden __aeabi_ui2f
1fffc900 g     O .bss	00000004 __atexit
00008f60 g     F .text	0000000c can0_error_isr
0000a768 g     F .text	000000a4 _init_Teensyduino_internal_
1fff8fe4 g     O .bss	00000004 SOCmem
00013ea0 g     F .text	00000254 .hidden __muldf3
0000e540 g     F .text	00000022 __sread
0000bb34 g     F .text	00000024 serial3_clear
00002cc4 g     F .text	00000408 updateSOC()
0000c954 g     F .text	00000058 usb_serial_flush_output
0000a5e8  w    F .text	00000006 dma_ch12_isr
0000df3c g     F .text	0000000c __malloc_lock
0000a5e8  w    F .text	00000006 can1_wakeup_isr
00001290 g     F .text	00000004 BMSModuleManager::getLowTemperature()
1fff8200 g     O .dmabuffers	000001bc _VectorsRam
000112a0 g     F .text	00000054 _fflush_r
00011480 g     F .text	00000078 _calloc_r
00009980 g     F .text	0000002c HardwareSerial2::begin(unsigned long)
00009d8c g     F .text	00000018 pit3_isr
0000d864 g     F .text	0000005e .hidden __cmpsf2
1fff8838 g     O .data	00000001 yield_active_check_flags
0000a5e8  w    F .text	00000006 enet_rx_isr
0000e900 g     F .text	00000002 __retarget_lock_acquire_recursive
0000a5e8  w    F .text	00000006 portc_isr
0000e6c4 g     F .text	000000a4 memset
0000a3ec g     F .text	00000010 main
1fffc61c g     O .bss	00000004 __malloc_max_total_mem
0000e8f8 g     F .text	00000002 __retarget_lock_init_recursive
0000b39c g     F .text	0000004c serial2_peek
0000d538 g     F .text	0000007c .hidden __aeabi_l2f
0000b014 g     F .text	00000044 serial2_set_rts
000085a0 g     F .text	000000c8 FlexCAN::setBaudRate(unsigned long)
0000d85c g     F .text	00000066 .hidden __ltsf2
0000a5a4  w    F .text	00000044 memmanage_fault_isr
0000b970 g     F .text	00000040 serial3_set_cts
0000e5c4 g     F .text	00000008 __sclose
0000cb38 g     F .text	00000070 usb_init_serialnumber
00016208 g       .text	00000000 __init_array_end
00008a20 g     F .text	00000096 FlexCAN::read(CAN_message_t&)
00011620 g     F .text	00000eb8 _dtoa_r
0000d9dc g     F .text	00000560 _malloc_r
1fffc5ec g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
0000a5e8  w    F .text	00000006 debugmonitor_isr
0000f4f8 g     F .text	0000001a __ascii_wctomb
0000d1c0 g     F .text	0000005a .hidden __aeabi_l2d
0000b058 g     F .text	00000040 serial2_set_cts
000098a4 g     F .text	00000084 EventResponder::triggerEventNotImmediate()
00009b1c  w    F .text	0000000c HardwareSerial3::write9bit(unsigned long)
64b7defe g       *ABS*	00000000 __rtc_localtime
1fffc0b4 g     O .bss	00000004 sendCnt
0000abe4 g     F .text	00000040 micros
1fff8fd4 g     O .bss	00000004 OverTime
1fff8fd0 g     O .bss	00000002 ErrorReason
0000d528 g     F .text	0000008c .hidden __aeabi_ul2f
0000a5e8  w    F .text	00000006 cmp1_isr
0000a5e8  w    F .text	00000006 ftm0_isr
00009a00  w    F .text	00000010 HardwareSerial2::attachCts(unsigned char)
0000d8cc g     F .text	00000010 .hidden __aeabi_cfcmple
1fffbebc g     O .bss	00000004 conttimer3
0000eac4 g     F .text	000000a0 _malloc_trim_r
00013bac g     F .text	000000f8 _wcsnrtombs_l
1fff8894 g     O .data	00000004 string0
0000c7e8 g     F .text	00000108 usb_serial_write
0000d5b4 g     F .text	00000168 .hidden __mulsf3
1fff8fb4 g     O .bss	00000004 AverageCurrentSec
0000a5fc  w    F .text	00000002 startup_late_hook
00009bcc  w    F .text	00000004 HardwareSerial3::peek()
00009764 g     F .text	00000058 FilterOnePole::output()
0000c660  w    F .text	00000004 usb_serial_class::available()
00009c40  w    F .text	00000020 HardwareSerial3::write(unsigned int)
00015b78  w    O .text	00000001 _serialEvent_default
000005dc g     F .text	00000006 BMSModule::getscells()
0000ba04 g     F .text	00000030 serial3_write_buffer_free
00009bac  w    F .text	00000020 HardwareSerial3::begin(unsigned long, unsigned long)
00009c20  w    F .text	00000020 HardwareSerial3::write(long)
1fff88b0  w    O .data	00000016 usb_string_product_name
0000ac24 g     F .text	00000098 delay
0000d22c g     F .text	0000007a .hidden __nedf2
0000a5e8  w    F .text	00000006 tpm0_isr
00009538 g     F .text	00000054 ADC_Module::startContinuous(unsigned char)
00016208 g     F .fini	00000000 _fini
1fff8fbc g     O .bss	00000004 CSVdebug
0000610c g     F .text	00000080 CAB300()
00015aa0 g     O .text	00000004 ADC::diff_table_ADC0
00000d6c g     F .text	00000068 BMSModuleManager::getLowCellVolt()
0000e500 g     F .text	00000040 sprintf
0000a5e8  w    F .text	00000006 i2s0_rx_isr
0000a5e8  w    F .text	00000006 uart4_error_isr
00009e28 g     F .text	00000010 Print::print(long)
0000eab8 g     F .text	0000000c atexit
00008f84 g     F .text	0000005c ADC::ADC()
0000d854 g     F .text	0000006e .hidden __gesf2
00013ca4 g     F .text	00000024 _wcsnrtombs_r
0000e878 g     F .text	0000002c _write_r
0000d398 g     F .text	0000016c .hidden __aeabi_frsub
00001188 g     F .text	000000f8 BMSModuleManager::getAvgTemperature()
1fffbed0 g     O .bss	00000002 discurrent
00008f50 g     F .text	0000000c can0_message_isr
00009898 g     F .text	0000000a movingAvg::reset()
1fff8f88 g     O .data	00000004 _impure_ptr
0000a5e8  w    F .text	00000006 can1_message_isr
0000d8dc g     F .text	00000012 .hidden __aeabi_fcmpeq
00011180 g     F .text	0000011e __sflush_r
0000a5e8  w    F .text	00000006 nmi_isr
00000ac8 g     F .text	00000050 BMSModule::getModuleVoltage()
00009a5c  w    F .text	00000004 HardwareSerial2::peek()
0000d5b4 g     F .text	00000168 .hidden __aeabi_fmul
00000b28 g     F .text	0000000a BMSModule::setAddress(int)
0000e4b8 g     F .text	00000046 _fwalk_sglue
00009cf8 g     F .text	0000004c IntervalTimer::end()
000161f4 g       .text	00000000 __preinit_array_end
00009128 g     F .text	000000ec ADC_Module::wait_for_cal()
0000d8c4 g     F .text	00000018 .hidden __aeabi_cfrcmple
000099ec  w    F .text	00000008 HardwareSerial2::addMemoryForWrite(void*, unsigned int)
0000a5e8  w    F .text	00000006 sdhc_isr
00015be4 g     O .text	00000068 vtable for HardwareSerial3
00009bd8  w    F .text	00000004 HardwareSerial3::flush()
0000052c g     F .text	0000004c BMSModule::getHighCellV()
00000b3c g     F .text	00000006 BMSModule::isExisting()
00000578 g     F .text	00000064 BMSModule::getAverageV()
0000ed70 g     F .text	0000002a __ascii_mbtowc
000093e0 g     F .text	000000a8 ADC_Module::setSamplingSpeed(ADC_settings::ADC_SAMPLING_SPEED)
00006f88 g     F .text	0000007c handleVictronLynx()
1fff8fd2 g     O .bss	00000001 OutputEnable
00008010 g     F .text	000004e4 setup
00015da0 g     O .text	00000054 usb_descriptor_list
0000bce0 g     F .text	00000044 usb_rx
000004f0 g     F .text	0000003c BMSModule::getLowCellV()
000094fc g     F .text	0000003c ADC_Module::startReadFast(unsigned char)
0000a5e8  w    F .text	00000006 dma_ch10_isr
00009824 g     F .text	0000001c movingAvg::begin()
00001858 g     F .text	0000019c Logger::logMessage(char*, std::__va_list)
1fffbecc g     O .bss	00000004 debugCur
0000d358 g     F .text	00000040 .hidden __aeabi_d2uiz
0000a5e8  w    F .text	00000006 uart0_error_isr
1fff8770 g     O .data	00000004 sensor
00008d1c g     F .text	00000234 FlexCAN::message_isr()
1fff8ff8 g     O .bss	00000004 UnderTime
0000c67c g     F .text	00000040 usb_malloc
00000458 g     F .text	0000006c BMSModule::BMSModule()
0000d8f0 g     F .text	00000012 .hidden __aeabi_fcmplt
0000a5e8  w    F .text	00000006 i2s0_isr
1fffc1b0 g     O .bss	00000004 warning
20008000 g       .bss	00000000 _estack
0000c90c g     F .text	00000048 usb_serial_write_buffer_free
0000a5e8  w    F .text	00000006 enet_timer_isr
0000d2c8 g     F .text	00000012 .hidden __aeabi_dcmpeq
1fff8cf0 g     O .data	0000000c __sglue
00009e54  w    F .text	00000014 _write
1fff8f90 g       .data	00000000 _edata
1fffbe38 g     O .bss	00000004 cellspresent
00000cf8 g     F .text	00000074 BMSModuleManager::decodecan(CAN_message_t&)
0000a5e8  w    F .text	00000006 i2s0_tx_isr
0000a5e8  w    F .text	00000006 adc1_isr
00008804 g     F .text	000001b8 FlexCAN::begin(unsigned long, CAN_filter_t const&, unsigned char, unsigned char)
00013a98 g     F .text	000000ac __fputwc
0000c668  w    F .text	00000004 usb_serial_class::availableForWrite()
1fffc1bc g     O .bss	00000001 printPrettyDisplay
0000a5e8  w    F .text	00000006 cmp0_isr
00015ad4 g     O .text	0000002c ADC::channel2sc1aADC1
00001a10 g     F .text	00000098 Logger::log(Logger::LogLevel, char*, std::__va_list)
1fff8fc4 g     O .bss	00000006 ChargerSerial
00000b34 g     F .text	00000006 BMSModule::getBalStat()
00008668 g     F .text	00000066 FlexCAN::setNumTxBoxes(unsigned char)
0000a6a0 g     F .text	0000005c ultoa
0000d98c g     F .text	0000003e .hidden __aeabi_f2uiz
00000b5c g     F .text	00000006 BMSModule::setReset(bool)
1fff875c g     O .data	00000004 maxac2
1fff8fac g     O .bss	00000004 AverageCurrent
0000afb8 g     F .text	0000005c serial2_set_rx
0000e564 g     F .text	0000003e __swrite
0000a698 g     F .text	00000004 operator new(unsigned int)
00009928 g     F .text	00000044 EventResponder::runFromInterrupt()
1fff8cec g     O .data	00000004 __malloc_trim_threshold
0000c658  w    F .text	00000004 usb_serial_class::peek()
00000b18 g     F .text	0000000e BMSModule::getTemperature(int)
1fff8760 g     O .data	00000004 ncharger
00012540 g     F .text	00000028 fiprintf
000126e0 g     F .text	00000f84 _vfiprintf_r
0000d504 g     F .text	00000024 .hidden __floatunsisf
0000f2e4 g     F .text	00000154 __mdiff
00001284 g     F .text	0000000a BMSModuleManager::getNumModules()
000142c4 g     F .text	0000004e .hidden __aeabi_d2iz
000084f4 g     F .text	0000002c SerialConsole::SerialConsole()
00009a60  w    F .text	00000004 HardwareSerial2::read()
1fffc5dc g     O .bss	00000001 usb_cdc_transmit_flush_timer
1fffc1a0 g     O .bss	00000004 undertriptimer
1fff8e68 g     O .data	00000120 _impure_data
0000d8cc g     F .text	00000010 .hidden __aeabi_cfcmpeq
0000b92c g     F .text	00000044 serial3_set_rts
00001ebc g     F .text	00000230 gaugeupdate()
00001b28 g     F .text	0000003c Can0callback()
0000a5e8  w    F .text	00000006 pit_isr
0000e4ac g     F .text	0000000c __sfp_lock_release
1fffbedc g     O .bss	00000004 gaugedebug
1fff8821 g     O .data	00000001 _serialEvent2_default
0000a1c8 g     F .text	0000003c analogWriteDAC0
00001aa8 g     F .text	00000024 Logger::debug(char*, ...)
00008524 g     F .text	00000002 CANListener::txHandler(int, unsigned char)
00015e10 g     O .text	00000101 _ctype_
0000a5e8  w    F .text	00000006 dac0_isr
0000b2a0 g     F .text	00000018 serial2_flush
1fffbe34 g     O .bss	00000004 candebug
0000a62c  w    F .text	00000004 _read
000161f4 g       .text	00000000 __init_array_start
0000a5e8  w    F .text	00000006 can1_tx_warn_isr
1fffc360 g     O .bss	00000008 FlexCAN::defaultMask
0000d32c g     F .text	0000002c .hidden __unorddf2
00000b54 g     F .text	00000006 BMSModule::setExists(bool)
0000d98c g     F .text	0000003e .hidden __fixunssfsi
1fff8774 g     O .data	0000003f bitTimingTable
1fff8ff0 g     O .bss	00000004 SOCtest
00009a30  w    F .text	00000006 HardwareSerial2::transmitterEnable(unsigned char)
0000a5e8  w    F .text	00000006 uart0_status_isr
0000a5e8  w    F .text	00000006 mcg_isr
0000cba8 g     F .text	00000050 expf
0000bae8 g     F .text	0000004c serial3_peek
00008fe4 g     F .text	00000142 ADC_Module::setConversionSpeed(ADC_settings::ADC_CONVERSION_SPEED)
1fff8764 g     O .data	00000004 pulltime
0000a080 g     F .text	00000076 Stream::parseInt(char)
0000b5b4 g     F .text	00000038 serial2_add_memory_for_read
00002580 g     F .text	00000744 getcurrent()
00000400 g     O .text	00000010 flashconfigbytes
00013cc8 g     F .text	000000d8 __smakebuf_r
0000ce90 g     F .text	00000008 .hidden __math_oflowf
00008754 g     F .text	0000004a FlexCAN::getFilter(CAN_filter_t&, unsigned char)
0000e940 g     F .text	000000dc strlen
0000d2b8 g     F .text	00000010 .hidden __aeabi_cdcmpeq
0000d21c g     F .text	0000008a .hidden __gedf2
00001b1c  w    F .text	0000000c IntervalTimer::~IntervalTimer()
1fff88b0 g     O .data	00000016 usb_string_product_name_default
1fff9004 g     O .bss	00000004 ampsecond
1fffbeb0 g     O .bss	00000004 contstat
1fff874c g     O .data	00000004 debugdigits
0000a5e8  w    F .text	00000006 dma_ch1_isr
1fff8fec g     O .bss	00000004 SOCset
00000ba0 g     F .text	000000b4 BMSModuleManager::BMSModuleManager()
0000bd24 g     F .text	0000002c usb_tx_packet_count
00009ab0  w    F .text	00000020 HardwareSerial2::write(long)
000089bc g     F .text	00000064 FlexCAN::available()
1fffbef0 g     O .bss	00000004 inbox
0000a764  w    F .text	00000002 startup_middle_hook
0000d16c g     F .text	00000042 .hidden __aeabi_f2d
0000a5e8  w    F .text	00000006 dma_ch5_isr
1fff8740 g     O .data	00000004 chargerid1
00008f70 g     F .text	00000002 can0_rx_warn_isr
0000a2f0 g     F .text	000000fc eeprom_write_block
00000c54 g     F .text	0000003a BMSModuleManager::clearmodules()
00009bd4  w    F .text	00000004 HardwareSerial3::available()
00008f6c g     F .text	00000002 can0_tx_warn_isr
0000a5e8  w    F .text	00000006 uart4_status_isr
1fff9008 g     O .bss	00000004 balancecells
1fffc0a0 g     O .bss	00000008 myTimer
0000ceac g     F .text	0000027a .hidden __subdf3
000161f4 g       .text	00000000 __preinit_array_start
000084f4 g     F .text	0000002c SerialConsole::SerialConsole()
00008c80 g     F .text	0000009a FlexCAN::readRxRegisters(CAN_message_t&, unsigned char)
0000eedc g     F .text	0000005e __lo0bits
00009b64  w    F .text	00000008 HardwareSerial3::addMemoryForRead(void*, unsigned int)
000020ec g     F .text	00000494 printbmsstat()
00000dd4 g     F .text	00000064 BMSModuleManager::getHighCellVolt()
1fffc0ac g     O .bss	00000004 outputstate
0000b8d0 g     F .text	00000058 serial3_set_tx
0000bcdc  w    F .text	00000002 serialEvent3()
1fffbec4 g     O .bss	00000004 currentact
0000ce98 g     F .text	0000000a __aeabi_atexit
000113d0 g     F .text	00000070 frexp
0000a5e8  w    F .text	00000006 cmp2_isr
0000d3a4 g     F .text	00000160 .hidden __addsf3
0000996c g     F .text	00000004 pendablesrvreq_isr
00009a6c  w    F .text	00000004 HardwareSerial2::availableForWrite()
1fff8cfc g     O .data	0000016c __global_locale
0000a5e8  w    F .text	00000006 wakeup_isr
00009b98  w    F .text	00000006 HardwareSerial3::setRX(unsigned char)
1fffc08c g     O .bss	00000014 myRASec
1fffc76c g     O .bss	00000001 __lock___sfp_recursive_mutex
0000a5e8  w    F .text	00000006 cmp3_isr
00009e68 g     F .text	00000014 Print::printNumber(unsigned long, unsigned char, unsigned char)
0000b790 g     F .text	0000009c serial3_format
1fff872c g     O .data	00000002 SOH
0000a630  w    F .text	00000006 _close
1fff8728 g     O .data	00000004 SOC
000006f4 g     F .text	0000034c BMSModule::decodecan(int, CAN_message_t&)
0000a5e8  w    F .text	00000006 tpm2_isr
0000edfc g     F .text	000000a0 __multadd
1fffc1a4 g     O .bss	00000004 value
0000ede8 g     F .text	00000012 _Bfree
1fff87b4 g     O .data	00000014 Serial2
0000a5e8  w    F .text	00000006 dma_ch0_isr
1fff88c8  w    O .data	00000016 usb_string_serial_number
1fffc1b8 g     O .bss	00000004 prettyCounter
0000a5e8  w    F .text	00000006 enet_tx_isr
1fffbe48 g     O .bss	00000004 cleartime


